name: API CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "apps/api/**"
      - "packages/internal/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      - "turbo.json"
      - "tsconfig.json"
      - "eslint.config.mjs"
      - ".github/workflows/api-ci.yml"
  pull_request:
    paths:
      - "apps/api/**"
      - "packages/internal/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      - "turbo.json"
      - "tsconfig.json"
      - "eslint.config.mjs"
      - ".github/workflows/api-ci.yml"

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: api-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-checks:
    name: Quality Checks (@follow/api)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages
        run: pnpm run build:packages

      - name: Type checking
        run: pnpm --filter @follow/api typecheck

      - name: Linting
        run: pnpm --filter @follow/api lint

      - name: Run tests
        env:
          CI: "1"
        run: pnpm --filter @follow/api test

  build:
    name: Build (@follow/api)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: quality-checks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages
        run: pnpm run build:packages

      - name: Build API
        run: pnpm --filter @follow/api build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-dist
          path: apps/api/dist
          retention-days: 7

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [quality-checks, build]
    if: always()

    steps:
      - name: Check job status
        run: |
          if [ "${{ needs.quality-checks.result }}" != "success" ] || [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ API CI failed"
            exit 1
          else
            echo "✅ API CI passed"
          fi
